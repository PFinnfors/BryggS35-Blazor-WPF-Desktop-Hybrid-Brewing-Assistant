@namespace WebviewAppShared.Components
@using WebviewAppShared.Data.Components
@using System.Collections.Specialized


<div class="row">
    <div class="col-md-6">
        <label for="itemsPerPage">Items per page:</label>
        <select id="itemsPerPage" @bind="ItemsPerPage">
            <option value="10">10</option>
            <option value="25">25</option>
            <option value="50">50</option>
            <option value="100">100</option>
        </select>
    </div>
    <div class="col-md-6">
        <input type="text" placeholder="Search..." @bind-value="@SearchTerm" />
    </div>
</div>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            @if (Table != null && Table.Entries != null && Table.Entries.Count > 0)
                @foreach (var key in Table.Entries.First().Keys)
                if (Table.DisplayKeys.Any(k => k == key.ToString()))
                {
                    <th>@key</th>
                }
        </tr>
    </thead>
    <tbody>
        @if (Table != null && FilteredEntries != null && FilteredEntries.Count > 0)
        foreach (var entry in FilteredEntries)
        {
            <tr>
                @foreach (var key in entry.Keys)
                {
                    if (Table.DisplayKeys.Contains(key.ToString()))
                    {
                        <td>@entry[key]</td>
                    }
                }
            </tr>
        }

        @*@foreach (var data in FilteredData)
        {
            <tr>
                @foreach (var header in ColumnHeaders)
                {
                    <td>@data.ElementAt(ColumnHeaders.IndexOf(header))</td>
                }
            </tr>
        }*@
    </tbody>
</table>

<div class="row">
    <div class="col-md-12">
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center">

                <li class="active page-item"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">2</a></li>

                @*@for (int i = 1; i <= TotalPages; i++)
                {
                var pageNumber = i;
                <li class="@((CurrentPage == pageNumber) ? "active" : "") page-item"><a class="page-link" href="#" @onclick="@(() => ChangePage(pageNumber))">@pageNumber</a></li>
                }*@
            </ul>
        </nav>
    </div>
</div>

@code {

    [Parameter]
    public TableData Table { get; set; }

    //private int _currentPage = 1;
    //[Parameter]
    //public int CurrentPage
    //{
    //    get => _currentPage;
    //    set
    //    {
    //        if (_currentPage != value)
    //        {
    //            _currentPage = value;
    //            StateHasChanged();
    //        }
    //    }
    //}

    private int _itemsPerPage = 10;
    [Parameter]
    public int ItemsPerPage
    {
        get => _itemsPerPage;
        set
        {
            if (_itemsPerPage != value)
            {
                _itemsPerPage = value;
                //CurrentPage = 1;
                StateHasChanged();
            }
        }
    }

    private string _searchTerm = "";
    public string SearchTerm
    {
        get => _searchTerm;
        set
        {
            if (_searchTerm != value)
            {
                _searchTerm = value;
                //CurrentPage = 1;
                StateHasChanged();
            }
        }
    }

    private List<OrderedDictionary> FilteredEntries => Table.Entries
        .Where(dict => dict.Values.Cast<string>()
        .Any(value => value?.ToLower().Contains(SearchTerm?.ToLower()) ?? false))
        //.OrderBy(entry => entry.GetProperty(ColumnHeaders[0]).GetValue(item, null))
        //.Skip((CurrentPage - 1) * ItemsPerPage)
        .Take(ItemsPerPage)
        .ToList();

    //private int TotalPages => (int)Math.Ceiling((double)DataSource.Count / ItemsPerPage);

    //private void ChangePage(int pageNumber)
    //{
    //    CurrentPage = pageNumber;
    //}
}